import { Box, Button, Flex, HStack, Image } from '@chakra-ui/react';
import Head from 'next/head';
import { useState } from 'react';

import Camera from '../components/Camera';
import useCamera from '../hooks/useCamera';

const Home: React.FC = () => {
  const [cameraEnabled, setCameraEnabled] = useState(false);
  const [facingMode, setFacingMode] = useState<'user' | 'environment'>(
    'environment'
  );
  const { videoRef, open, close, capture } = useCamera();
  const [image, setImage] = useState('');

  const resetCamera = (newFacingMode?: 'user' | 'environment') => {
    open({
      audio: false,
      video: { facingMode: newFacingMode || facingMode, frameRate: 30 },
    });
  };

  return (
    <Box h="100vh">
      <Head>
        <title>NextJS Typescript Boilerplate</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {image && (
        <Box
          pos="absolute"
          onClick={() => {
            setImage('');
          }}
          zIndex={10}
          w="full"
          h="full"
        >
          <Image src={image} alt="test" h="full" />
        </Box>
      )}
      <Flex flexDir="column" h="full">
        <Camera ref={videoRef} />
      </Flex>
      <Flex align="center" w="full" pos="fixed" bottom={0}>
        <HStack>
          <Button
            onClick={() => {
              setCameraEnabled((prev) => !prev);
              if (!cameraEnabled) {
                resetCamera();
              } else {
                close();
              }
            }}
            colorScheme="teal"
            size="lg"
          >
            {cameraEnabled ? 'Close' : 'Open'}
          </Button>
          <Button
            onClick={async () => {
              const newImage = await capture();
              setImage(newImage);
            }}
          >
            Capture
          </Button>
          <Button
            onClick={() => {
              setFacingMode((prev) =>
                prev === 'environment' ? 'user' : 'environment'
              );
              resetCamera(
                facingMode === 'environment' ? 'user' : 'environment'
              );
            }}
            colorScheme="teal"
            size="lg"
          >
            {facingMode}
          </Button>
        </HStack>
      </Flex>
    </Box>
  );
};

export default Home;
